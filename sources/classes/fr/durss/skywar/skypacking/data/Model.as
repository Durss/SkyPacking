package fr.durss.skywar.skypacking.data {	import com.nurun.structure.mvc.model.events.ModelEvent;	import fr.durss.utils.SpaceComputer;	import flash.events.EventDispatcher;	import com.nurun.structure.mvc.model.IModel;		/**	 * 	 * @author  Francois	 */	public class Model extends EventDispatcher implements IModel {				private var _computer:SpaceComputer;		private var _stateIndex:int;		private var _copyMode:Boolean;						/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>Model</code>.<br>		 */		public function Model() {			initialize();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/**		 * Gets the space computer's reference.		 */		public function get computer():SpaceComputer { return _computer; }				/**		 * Gets the space computer's reference.		 */		public function set computer(value:SpaceComputer):void { _computer = value; }				/**		 * Sets the matrix data.<br>		 * <br>		 * The parameter should be a bi-dimensional array whose cells should		 * contain true or false values.		 */		public function set matrix(value:Array):void {			_computer.matrix = value;			_computer.getMaximumSolutions();			update();		}		/**		 * Gets the navigation items.		 */		public function get navItems():Array { 			return ["Topologie", "Mode manuel", "Mode auto", "Options..."];		}				/**		 * Gets the current state index.		 */		public function get stateIndex():int {			return _stateIndex;		}				/**		 * Sets if the application's background should be displayed or not.		 */		public function set copyMode(value:Boolean):void {			_copyMode = value;			update();		}				/**		 * Gets if the application's background should be displayed or not.		 */		public function get copyMode():Boolean {			return _copyMode;		}						/* ****** *		 * PUBLIC *		 * ****** */		/**		 * Starts the application		 */		public function start():void {			update();		}				/**		 * Sets the view type to display.		 * 		 * @param stateIndex	selected navigation tab index.		 */		public function setViewState(stateIndex:int):void {			_stateIndex = stateIndex;			update();		}								/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initialize the class.<br>		 */		private function initialize():void {			_copyMode = false;		}				/**		 * Fires an update event to the views.		 */		private function update():void {			dispatchEvent(new ModelEvent(ModelEvent.UPDATE, this));		}	}}