package fr.durss.skywar.skypacking.controller {	import fr.durss.skywar.skypacking.data.Model;	import flash.errors.IllegalOperationError;		/**	 * Singleton FrontController	 * 	 * @author @author Francois	 */	public class FrontController {				private static var _instance:FrontController;		private var _model:Model;								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>FrontController</code>.<br>		 */		public function FrontController(enforcer:SingletonEnforcer) {			if(enforcer == null) {				throw new IllegalOperationError("Singleton. Use getInstance() method.");			}		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/**		 * Singleton instance getter		 */		public static function getInstance():FrontController {			if(_instance == null)_instance = new  FrontController(new SingletonEnforcer());			return _instance;			}		/* ****** *		 * PUBLIC *		 * ****** */		/**		 * Initialize the class.		 */		public function initialise(model:Model):void {			_model = model;		}				/**		 * Sets the matrix to the space computer.		 * 		 * @param matrix	a two dimentional array containing booleans.		 */		public function registerMatrix(matrix:Array):void {			_model.matrix = matrix;		}				/**		 * Sets the view type to display.		 * 		 * @param stateIndex	selected navigation tab index.		 */		public function setViewState(stateIndex:int):void {			_model.setViewState(stateIndex);		}				/**		 * Sets if the copy mode is enabled.<br>		 * <br>		 * When the copy mode is on, the application's background becames invisible		 * to be able to copy the game screen on the grid.		 */		public function set copyMode(value:Boolean):void {			_model.copyMode = value;		}								/* ******* *		 * PRIVATE *		 * ******* */			}}internal class SingletonEnforcer{}